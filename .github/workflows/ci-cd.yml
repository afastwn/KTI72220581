name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install Dependencies
        run: dotnet restore
        working-directory: SecureWeb

      - name: Build SecureWeb
        run: dotnet build --configuration Release --no-restore
        working-directory: SecureWeb

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal
        working-directory: SecureWeb

      - name: List directory contents
        run: ls -la
      
      - name: Debug Information
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Git status:"
          git status
      
      - name: Backup
        if: success() && github.ref == 'refs/heads/main'
        run: |
          if [ -f "./backup.sh" ]; then
            echo "backup.sh found, executing..."
            chmod +x ./backup.sh
            ./backup.sh
          else
            echo "backup.sh not found in current directory"
            echo "Searching for backup.sh:"
            find . -name backup.sh
            exit 1
          fi

      - name: Check for vulnerabilities
        run: dotnet list package --vulnerable --include-transitive
        working-directory: SecureWeb

      - name: Publish Artifacts
        run: |
          mkdir -p ../publish
          dotnet publish SecureWeb/SecureWeb.csproj --configuration Release --no-build --output ../publish

      - name: Publish
        run: dotnet publish -c Release -o publish
        working-directory: SecureWeb
            
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ./publish

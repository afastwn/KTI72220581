name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install Dependencies
      run: dotnet restore
      working-directory: SecureWeb

    - name: Build SecureWeb
      run: dotnet build --configuration Release --no-restore
      working-directory: SecureWeb

    - name: Run Tests
      run: dotnet test --no-build --verbosity normal
      working-directory: SecureWeb

    - name: Check for vulnerabilities
      run: dotnet list package --vulnerable --include-transitive
      working-directory: SecureWeb
      
    - name: List directory contents
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -R
        
    - name: Run Snyk security scan
      uses: snyk/actions/dotnet@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        args: "--file=SecureWeb/SecureWeb.csproj --package-manager=nuget"
        
    - name: Run OWASP ZAP Scan
      uses: zaproxy/action-full-scan@v0.9.0
      with:
        target: 'http://localhost:5000'

    - name: Static code analysis
      uses: github/codeql-action/analyze@v2
      with:
        languages: csharp

    - name: Build Docker image
      run: |
        docker build -t secureweb:${{ github.sha }} .
        
    - name: Run container security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'secureweb:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

    - name: Publish
      run: dotnet publish SecureWeb.csproj -c Release
      working-directory: SecureWeb
            
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: SecureWeb/bin/Release/net8.0/publish/**

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp

    - name: Deploy to production
      run: |
        echo "Deploying to production server"
        # Add your deployment commands here
        # For example:
        # scp -r * user@your-server:/path/to/deployment
        # ssh user@your-server 'systemctl restart your-app'

    - name: Backup
      run: |
        if [ -f "./SecureWeb/backup.sh" ]; then
          echo "backup.sh found, executing..."
          chmod +x ./SecureWeb/backup.sh
          ./SecureWeb/backup.sh
        else
          echo "backup.sh not found in SecureWeb directory"
          echo "Searching for backup.sh:"
          find . -name backup.sh
          exit 1
        fi
